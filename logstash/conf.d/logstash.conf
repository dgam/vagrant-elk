# OSI logs

input {

    file {
      type => "osi_syslog"
      path => "/vagrant/data/OSI/dac1_report/syslog.prn"
      add_field => [ "recieved_from", "DAC1" ]
      start_position => beginning
    }
    file {
       type => "osi_monarch"
       path => "/vagrant/data/OSI/dac1_report/monarch.prn"
       add_field => [ "recieved_from", "DAC1" ]
       start_position => beginning
    }
    file {
      type => "osi_syslog"
      path => "/vagrant/data/OSI/dac2_report/syslog.prn"
      add_field => [ "recieved_from", "DAC2" ]
      start_position => beginning
    }
    file {
       type => "osi_monarch"
       path => "/vagrant/data/OSI/dac2_report/monarch.prn"
       add_field => [ "recieved_from", "DAC2" ]
       start_position => beginning
    }

}

# Syslog filtering
filter {

    if [type] == "osi_*" {
      grok {
        patterns_dir => "/vagrant/logstash/patterns"
        match => { "message" => "%{DATESTAMP:event_date} %{SYSLOGHOST:HOSTNAME} %{SYSLOGPROG}: %{osi_classlog} %{GREEDYDATA:osi_message}" }
        add_field => [ "received_at", "%{timestamp}"]
      }
    }

    syslog_pri { }

    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "MM/dd/YY HH:mm:ss" ]
    }

    if !("_grokparsefailure" in [tags]) {
      mutate {
        replace => [ "@source_host", "%{syslog_hostname}" ]
        replace => [ "@message", "%{syslog_message}" ]
      }
    }
}

# Store in ES
output {
    elasticsearch {}
#    stdout { codec => rubydebug }
  }
